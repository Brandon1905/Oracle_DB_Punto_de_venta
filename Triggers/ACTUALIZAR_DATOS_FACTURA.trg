create or replace noneditionable trigger ACTUALIZAR_DATOS_FACTURA
  after insert
  on pv_detalle_factura 
  for each row
 declare
  PRECIO_VENTA2 FLOAT;
  FAMILIA_ID FLOAT;
  PORVEEDOR_ID FLOAT;
  PRODUCUTO_ID FLOAT;
  IMPUESTOS2 FLOAT;
  IMPUESTOS FLOAT;
  DESCUENTOS FLOAT;
  PORCIENTO_UTILIDAD2 FLOAT;
  SEDE NUMBER;
  CANTIDAD_PRODUC INTEGER;
  NN_XN INTEGER;
  NX_NN INTEGER;
  CONTEO INTEGER;
begin

CANTIDAD_PRODUC := :NEW.CANTIDAD;

SELECT FA.PV_SEDE_ID INTO SEDE
FROM PV_FACTURA FA
WHERE FA.FACTURA_ID = :new.pv_factura_id;

SELECT PP.PRECIO_VENTA, PP.IMPUESTOS, PP.PRODUCTO_ID, PP.PV_PROVEEDOR_ID, PP.PV_FAMILIA_ID 
INTO PRECIO_VENTA2, IMPUESTOS, PRODUCUTO_ID, PORVEEDOR_ID ,FAMILIA_ID
FROM PV_PRODUCTO PP
WHERE PP.PRODUCTO_ID = :NEW.PV_PRODUCTO_ID;

SELECT DI.PORCIENTO_UTILIDAD INTO PORCIENTO_UTILIDAD2
FROM PV_DETALLE_INVENTARIO DI
WHERE DI.PV_PRODUCTO_ID = :NEW.PV_PRODUCTO_ID AND EXISTS (SELECT * FROM PV_FACTURA F   
             WHERE F.FACTURA_ID = :NEW.pv_factura_ID AND EXISTS(  --:NEW.pv_factura_ID
                         SELECT * FROM PV_BODEGA B 
                         WHERE B.PV_SEDE_ID = F.PV_SEDE_ID AND EXISTS( 
                                            SELECT * FROM PV_INVENTARIO I 
                                            WHERE I.PV_BODEGA_ID = B.BODEGA_ID 
                                            AND I.INVENTARIO_ID = DI.PV_INVENTARIO_ID ))); --:NEW.PV_INVENTARIO_ID          

-- DESCUENTOS 
 SELECT COUNT(*) INTO DESCUENTOS
FROM PV_DESCUENTOS D
WHERE PRODUCUTO_ID = D.PV_PRODUCTOS_ID OR FAMILIA_ID = D.PV_FAMILIA_ID OR PORVEEDOR_ID = D.PV_PROVEEDOR_ID AND D.FECHA_VENCIMIENTO >= SYSDATE;

IF DESCUENTOS >= 1 THEN
DESCUENTOS := DESCUENTO(PRODUCUTO_ID, FAMILIA_ID, PORVEEDOR_ID );
END IF; 

IF DESCUENTOS < 1 THEN
DESCUENTOS := 0;
END IF; 


-- 2X1 NXN 
CONTEO :=0; 
SELECT COUNT(*) INTO CONTEO
FROM PV_PROMOCIONES P
WHERE P.PV_PRODUCTO_ID = :NEW.PV_PRODUCTO_ID AND P.PV_SEDE_ID = SEDE AND P.TIPO = 'NXN' AND P.FECHA_LIMITE_PROMOCION >= SYSDATE AND P.ESTADO = 'A';

IF CONTEO > 0 THEN

SELECT P.PRODUCTOS_NN_X_N, P.PRODUCTOS_N_X_NN INTO NN_XN, NX_NN
FROM PV_PROMOCIONES P
WHERE P.PV_PRODUCTO_ID = :NEW.PV_PRODUCTO_ID AND P.PV_SEDE_ID = SEDE AND P.TIPO = 'NXN' AND P.FECHA_LIMITE_PROMOCION >= SYSDATE AND P.ESTADO = 'A';


IF NN_XN > 0  AND NN_XN > NX_NN THEN

CANTIDAD_PRODUC := CALCULO_NXN(NN_XN, NX_NN, :NEW.CANTIDAD); 

END IF;

END IF;


PRECIO_VENTA2 := (PRECIO_VENTA2 * (1 + (PORCIENTO_UTILIDAD2 / 100)));   
DESCUENTOS := PRECIO_VENTA2 - (PRECIO_VENTA2 * (1 - (DESCUENTOS / 100)));
IMPUESTOS2 := (PRECIO_VENTA2-DESCUENTOS) - ((PRECIO_VENTA2 - DESCUENTOS) * (1 - (IMPUESTOS / 100)));

UPDATE PV_FACTURA
SET IMPUESTO = IMPUESTO + (IMPUESTOS2 * CANTIDAD_PRODUC), 
TOTAL = TOTAL + (((PRECIO_VENTA2 - DESCUENTOS) + IMPUESTOS2) * CANTIDAD_PRODUC),
SUB_TOTAL = SUB_TOTAL + (PRECIO_VENTA2 * CANTIDAD_PRODUC),
DESCUENTO = DESCUENTO + (DESCUENTOS * CANTIDAD_PRODUC)
WHERE FACTURA_ID = :NEW.PV_FACTURA_ID;


end ACTUALIZAR_DATOS_FACTURA;
/
